name: EC2 Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to deploy (dev, stage, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stage
          - prod
      key_pair_name:
        description: "EC2 SSH key pair name"
        required: true
        default: "your-keypair-name"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
  DYNAMODB_TABLE: ${{ secrets.DYNAMODB_TABLE }}

jobs:
  terraform-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-actions-terraform-ec2
          audience: sts.amazonaws.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init (Reconfigure Backend)
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.AWS_S3_BUCKET }}" \
            -backend-config="key=aws-vpc/${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan \
          -input=false \
          -var="environment=${{ github.event.inputs.environment }}" \
          -var="key_pair_name=${{ github.event.inputs.key_pair_name }}" \
          -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Output EC2 Public IP
        run: terraform output ec2_public_ip
