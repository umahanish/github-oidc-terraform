name: Terraform VPC Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'

env:
  AWS_REGION: eu-west-2
  AWS_S3_BUCKET: github-oidc-bucket-terraform
  DYNAMODB_TABLE: terraform-locks

jobs:
  terraform:
    name: Terraform VPC
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Verify backend S3 state file
        run: |
          echo "Checking S3 backend file:"
          aws s3 ls s3://$AWS_S3_BUCKET/aws-vpc/${ENVIRONMENT}/terraform.tfstate || echo "⚠️ State file not found in S3"

      - name: Terraform Init (Reconfigure Backend)
        run: |
          echo "Using S3 bucket: ${{ env.AWS_S3_BUCKET }}"
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.AWS_S3_BUCKET }}" \
            -backend-config="key=aws-vpc/${{ env.ENVIRONMENT }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"

      - name: Debug Terraform Workspace & Backend
        run: |
          terraform workspace show || true
          terraform providers

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -input=false \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="vpc_cidr=10.10.0.0/16" \
            -var='public_subnets=["10.10.1.0/24","10.10.2.0/24"]' \
            -var='private_subnets=["10.10.101.0/24","10.10.102.0/24"]' \
            -var='availability_zones=["eu-west-2a","eu-west-2b"]' \
            -var='tags={Project="aws-vpc-demo",Owner="PlatformTeam"}' \
            -out=tfplan

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./terraform
        run: |
          terraform apply -input=false -auto-approve tfplan
