name: VPC Deploy

# Trigger manually
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev/stage/prod)'
        required: true
        default: 'dev'

# Required for OIDC authentication
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
  DYNAMODB_TABLE: ${{ secrets.DYNAMODB_TABLE }}

jobs:
  terraform-vpc:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials via OIDC
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-actions-terraform-vpc
          audience: sts.amazonaws.com

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # Step 4: Terraform Init with backend reconfiguration
      - name: Terraform Init (Reconfigure Backend)
        working-directory: ./terraform/vpc
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.AWS_S3_BUCKET }}" \
            -backend-config="key=vpc/${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"

      # Step 5: Verify Terraform backend
      - name: Verify Terraform Init
        working-directory: ./terraform/vpc
        run: |
          echo "Contents of .terraform folder:"
          ls -R .terraform || echo "No .terraform folder found!"

      # Step 6: Terraform Plan
      - name: Terraform Plan
        working-directory: ./terraform/vpc
        run: |
          terraform plan \
            -input=false \
            -var-file="environments/${{ github.event.inputs.environment }}/terraform.tfvars" \
            -out=tfplan

      # Step 7: Terraform Apply
      - name: Terraform Apply
        working-directory: ./terraform/vpc
        run: terraform apply -auto-approve -input=false tfplan
